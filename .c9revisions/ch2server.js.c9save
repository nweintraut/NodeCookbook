{"ts":1367787465002,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367787588922,"patch":[[{"diffs":[[1,"var http    = require('http');\n    \nvar form = require('fs').readFileSync('./content/form.html');\nhttp.createServer(function(request, response){\n})"]],"start1":0,"start2":0,"length1":0,"length2":147}]],"length":147,"saved":false}
{"ts":1367787605246,"patch":[[{"diffs":[[0,"http');\n"],[-1,"    "],[1,"var port = process.env.PORT || 3000;"],[0,"\nvar for"]],"start1":23,"start2":23,"length1":20,"length2":52}]],"length":179,"saved":false}
{"ts":1367787627873,"patch":[[{"diffs":[[0,"html');\n"],[1,"\n"],[0,"http.cre"]],"start1":122,"start2":122,"length1":16,"length2":17},{"diffs":[[0,"nse){\n})"],[1,".listen(port, function(){\n    console.log (\"Listening on port \" + port + \".\");\n});"]],"start1":172,"start2":172,"length1":8,"length2":90}]],"length":262,"saved":false}
{"ts":1367787670035,"patch":[[{"diffs":[[0,"ponse){\n"],[1,"    if(request.method === 'GET') {\n        response.writeHead(200, {'Content-Type': 'text/html'});\n        response.end(form);\n    }\n"],[0,"}).liste"]],"start1":170,"start2":170,"length1":16,"length2":149}]],"length":395,"saved":false}
{"ts":1367787835185,"patch":[[{"diffs":[[0,"(form);\n"],[1,"    } else if(request.method === 'POST') {\n      var postData = '';\n      request.on('data', function(chunk){\n          \n      }).on('end', function() {\n          console.log('User posted: \\n' + postData + \"\\n---\");\n          response.send(\"You posted: \\n\" + postData + \"\\n---\");\n      });\n"],[0,"    }\n})"]],"start1":297,"start2":297,"length1":16,"length2":306}]],"length":685,"saved":false}
{"ts":1367787845892,"patch":[[{"diffs":[[0,"        "],[1,"postData += chunck;"],[0,"\n      }"]],"start1":417,"start2":417,"length1":16,"length2":35}]],"length":704,"saved":false}
{"ts":1367787847747,"patch":[[{"diffs":[[0," += chun"],[-1,"c"],[0,"k;\n     "]],"start1":433,"start2":433,"length1":17,"length2":16}]],"length":703,"saved":false}
{"ts":1367787881909,"patch":[[{"diffs":[[0,"esponse."],[-1,"s"],[0,"end(\"You"]],"start1":550,"start2":550,"length1":17,"length2":16}]],"length":702,"saved":false}
{"ts":1367788003681,"patch":[[{"diffs":[[0,"http');\n"],[1,"var querystring = require('querystring');\nvar util = require('util');\n"],[0,"var port"]],"start1":23,"start2":23,"length1":16,"length2":86}]],"length":772,"saved":false}
{"ts":1367788046301,"patch":[[{"diffs":[[0,"unction() {\n"],[1,"          var postDataObject = querystring.parse(postData);\n"],[0,"          co"]],"start1":534,"start2":534,"length1":24,"length2":84}]],"length":832,"saved":false}
{"ts":1367788059328,"patch":[[{"diffs":[[0,": \\n\" + "],[1,"util.inspect("],[0,"postData"],[1,"Object)"],[0," + \"\\n--"]],"start1":703,"start2":703,"length1":24,"length2":44}]],"length":852,"saved":false}
{"ts":1367788084035,"patch":[[{"diffs":[[0,"postData"],[1,"Object"],[0," + \"\\n--"]],"start1":648,"start2":648,"length1":16,"length2":22}]],"length":858,"saved":false}
{"ts":1367788219035,"patch":[[{"diffs":[[0,".html');"],[1,"\nvar maxData = 2 * 1024 * 1024; // 2mb"],[0,"\n\nhttp.c"]],"start1":191,"start2":191,"length1":16,"length2":54},{"diffs":[[0," chunk;\n"],[1,"          if (postData.length > maxData) {\n              postData = '';\n              this.pause();\n              response.writeHead(413); // Request entity too large\n              response.end('Too large');\n          }\n"],[0,"      })"]],"start1":544,"start2":544,"length1":16,"length2":236}]],"length":1116,"saved":false}
{"ts":1367788257060,"patch":[[{"diffs":[[0,"unction() {\n"],[1,"          if (!postData) { // prevents empty post requests from crashing the server.\n              response.end(); \n              return\n          }\n"],[0,"          va"]],"start1":792,"start2":792,"length1":24,"length2":173}]],"length":1265,"saved":false}
{"ts":1367788261303,"patch":[[{"diffs":[[0,"  return"],[1,";"],[0,"\n       "]],"start1":932,"start2":932,"length1":16,"length2":17}]],"length":1266,"saved":false}
{"ts":1367788597042,"patch":[[{"diffs":[[1,"// "],[0,"var http    "]],"start1":0,"start2":0,"length1":12,"length2":15},{"diffs":[[0,"re('http');\n"],[-1,""],[0,"var querystr"]],"start1":22,"start2":22,"length1":24,"length2":24},{"diffs":[[0,"re('util');\n"],[1,"var connect = require('connect');\n"],[0,"var port = p"]],"start1":92,"start2":92,"length1":24,"length2":58},{"diffs":[[0,"// 2mb\n\n"],[1,"// "],[0,"http.cre"]],"start1":268,"start2":268,"length1":16,"length2":19},{"diffs":[[0,"ponse){\n"],[1,"connect(connect.limit('64kb'), connect.bodyParser(), function(request, response){\n"],[0,"    if(r"]],"start1":318,"start2":318,"length1":16,"length2":98}]],"length":1388,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367788729687,"patch":[[{"diffs":[[0,") {\n"],[1,"\n"],[0,"      "],[-1,"var postData = '';\n      request.on('data', function(chunk){\n          postData += chunk;\n          if (postData.length > maxData) {\n              postData = '';\n              this.pause();\n              response.writeHead(413); // Request entity too large\n              response.end('Too large');\n          }\n      }).on('end', function() {\n          if (!postData) { // prevents empty post requests from crashing the server.\n              response.end(); \n              return;\n          }\n          var postDataObject = querystring.parse(postData);\n          console.log('User posted: \\n' + postDataObject"],[1,"    console.log('User posted: \\n' + request.body"],[0," + \""]],"start1":574,"start2":574,"length1":622,"length2":63},{"diffs":[[0,"ect("],[-1,"postDataObject"],[1,"request.body"],[0,") + "]],"start1":697,"start2":697,"length1":22,"length2":20}]],"length":827,"saved":false}
{"ts":1367788745880,"patch":[[{"diffs":[[0,"OST') {\n"],[-1,"\n"],[0,"        "]],"start1":570,"start2":570,"length1":17,"length2":16},{"diffs":[[0,"\");\n"],[-1,"      });\n"],[0,"    "]],"start1":722,"start2":722,"length1":18,"length2":8}]],"length":816,"saved":false}
{"ts":1367790090299,"patch":[[{"diffs":[[0,"re('util');\n"],[1,"var formidable = require('formidable');\n"],[0,"var connect "]],"start1":92,"start2":92,"length1":24,"length2":64}]],"length":856,"saved":false}
{"ts":1367790341510,"patch":[[{"diffs":[[0,"// 2mb\n\n"],[-1,"// "],[0,"http.cre"]],"start1":308,"start2":308,"length1":19,"length2":16},{"diffs":[[0,"ponse){\n"],[1,"// "],[0,"connect("]],"start1":355,"start2":355,"length1":16,"length2":19}]],"length":856,"saved":false}
{"ts":1367790419324,"patch":[[{"diffs":[[0,"= 'POST') {\n"],[1,"        var postData=\"\";\n        request.on('data', function(chunk){\n            postData += chunk;\n        }).on('end', function(){\n            \n        });\n"],[0,"          co"]],"start1":606,"start2":606,"length1":24,"length2":182}]],"length":1014,"saved":false}
{"ts":1367790446953,"patch":[[{"diffs":[[0,"(){\n"],[-1,"            \n        });\n"],[0,"    "]],"start1":747,"start2":747,"length1":33,"length2":8},{"diffs":[[0,": \\n' + "],[-1,"request.body"],[1,"postData"],[0," + \"\\n--"]],"start1":785,"start2":785,"length1":28,"length2":24},{"diffs":[[0,"\" + "],[-1,"util.inspect(request.body) + \"\\n---\");"],[1,"postData + \"\\n---\");            \n        });\n"],[0,"\n   "]],"start1":852,"start2":852,"length1":46,"length2":53}]],"length":992,"saved":false}
{"ts":1367790467476,"patch":[[{"diffs":[[-1,"// "],[0,"var http"]],"start1":0,"start2":0,"length1":11,"length2":8}]],"length":989,"saved":false}
{"ts":1367790668548,"patch":[[{"diffs":[[0,"var "],[-1,"postData=\"\";\n        request.on('data', function(chunk){\n            postData += chunk;\n        }).on('end', function(){"],[1,"incoming = new formidable.IncomingForm();"],[0,"\n   "]],"start1":623,"start2":623,"length1":128,"length2":49},{"diffs":[[0,"    "],[-1,"  console.log('User posted: \\n' + postData + \"\\n---\");\n          response.end(\"You posted: \\n\" + postData + \"\\n---\");            "],[1,"incoming.uploadDir = 'uploads';"],[0,"\n   "]],"start1":673,"start2":673,"length1":137,"length2":39}]],"length":812,"saved":false}
{"ts":1367790677323,"patch":[[{"diffs":[[0,"ds';"],[-1,"\n        });"],[0,"\n\n  "]],"start1":704,"start2":704,"length1":20,"length2":8}]],"length":800,"saved":false}
{"ts":1367790733799,"patch":[[{"diffs":[[0,"ploads';"],[1,"\n        incoming.on('file', function(field, file){\n            \n        }).on('end', function(){\n            response.end(\"All files received\");\n        });\n        incoming.parse(request);"],[0,"\n\n    }\n"]],"start1":700,"start2":700,"length1":16,"length2":206}]],"length":990,"saved":false}
{"ts":1367790777229,"patch":[[{"diffs":[[0,"        "],[1,"if(!file.size) {return;}\n            response.write(file.name + ' received\\n');"],[0,"\n       "]],"start1":764,"start2":764,"length1":16,"length2":95}]],"length":1069,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367791106830,"patch":[[{"diffs":[[0,"eturn;}\n"],[1,"            else {\n"],[0,"        "]],"start1":789,"start2":789,"length1":16,"length2":35},{"diffs":[[0,"ed\\n');\n"],[1,"            }\n"],[0,"        "]],"start1":863,"start2":863,"length1":16,"length2":30}]],"length":1102,"saved":false}
{"ts":1367791157643,"patch":[[{"diffs":[[0," else {\n"],[1,"                console.log(\"File size is: \" + file.size);\n"],[0,"        "]],"start1":808,"start2":808,"length1":16,"length2":75}]],"length":1161,"saved":false}
{"ts":1367791187944,"patch":[[{"diffs":[[0,"= 'POST') {\n"],[1,"        console.log(\"In POST\");\n"],[0,"        var "]],"start1":603,"start2":603,"length1":24,"length2":56}]],"length":1193,"saved":false}
{"ts":1367791371479,"patch":[[{"diffs":[[0,") {\n"],[-1,"        console.log(\"In POST\");\n"],[0,"    "]],"start1":611,"start2":611,"length1":40,"length2":8},{"diffs":[[0,"e {\n"],[-1,"                console.log(\"File size is: \" + file.size);\n"],[0,"    "]],"start1":812,"start2":812,"length1":67,"length2":8}]],"length":1102,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367791466594,"patch":[[{"diffs":[[0,"      }\n"],[1,"        }).on('field', function(){\n            response.write(field + ' : ' + value + '\\n');\n"],[0,"        "]],"start1":877,"start2":877,"length1":16,"length2":109}]],"length":1195,"saved":false}
{"ts":1367791476189,"patch":[[{"diffs":[[0,"ield', function("],[1,"field, value"],[0,"){\n            r"]],"start1":901,"start2":901,"length1":32,"length2":44}]],"length":1207,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367791697147,"patch":[[{"diffs":[[0,"loads';\n"],[1,"//        incoming.maxFieldsSize = xxx; // limits size in bytes of non-file fields\n"],[0,"        "]],"start1":701,"start2":701,"length1":16,"length2":99}]],"length":1290,"saved":false}
{"ts":1367791770702,"patch":[[{"diffs":[[0,"ing.on('"],[1,"fileBegin', function(){\n            if(file.name) {\n                file.path += \"_\" + file.name;\n            }\n        }).on('"],[0,"file', f"]],"start1":805,"start2":805,"length1":16,"length2":143}]],"length":1417,"saved":false}
{"ts":1367791780374,"patch":[[{"diffs":[[0,"egin', function("],[1,"field, file"],[0,"){\n            i"]],"start1":818,"start2":818,"length1":32,"length2":43}]],"length":1428,"saved":false}
{"ts":1367792425657,"patch":[[{"diffs":[[0,"rmidable');\n"],[1,"var form = fs.readFileSync('put_upload.html');\n"],[0,"var connect "]],"start1":129,"start2":129,"length1":24,"length2":71},{"diffs":[[0,"uest);\n\n"],[1,"    } else if (request.method === 'PUT'){\n        \n"],[0,"    }\n})"]],"start1":1377,"start2":1377,"length1":16,"length2":67}]],"length":1526,"saved":false}
{"ts":1367792487713,"patch":[[{"diffs":[[0,"nc('"],[-1,"put_upload"],[1,"./content/form"],[0,".htm"]],"start1":165,"start2":165,"length1":18,"length2":22}]],"length":1530,"saved":false}
{"ts":1367792681541,"patch":[[{"diffs":[[0,"re('util');\n"],[1,"var fs = require('fs');\n"],[0,"var formidab"]],"start1":89,"start2":89,"length1":24,"length2":48},{"diffs":[[0,"'PUT'){\n"],[1,"        var fileData = new Buffer(+request.headers['content-length']);\n        var bufferOffset = 0;\n        request.on('data', function(chunk){\n            chunk.copy(fileData, bufferOffset);\n            bufferOffset += chunk.length;\n        }).on('end', function() {\n            var rand = (Math.random()*Math.random()).toString(16).replace('.','');\n            var to = 'uploads/'+ rand + \"_\" + request.headers['x-uploadedfilename'];\n            fs.writeFile(to, fileData, function(err){\n               if(err){throw err;}\n               console.log('Saved file to ' + to);\n               response.end();\n            });\n        });\n"],[0,"        "]],"start1":1447,"start2":1447,"length1":16,"length2":652}]],"length":2190,"saved":false}
